%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$+\pi/2$', r'$+\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
import matplotlib.pyplot as plt
def a(n):
    return (1 + 1/n)**n

plt.plot(a(1),a(2),a(3), a(4), a(5), a(6))
import matplotlib.pyplot as plt
def a(n):
    return (1 + 1/n)**n

plt.plot(a(1),a(2),a(3), a(4), a(5), a(6))
import matplotlib.pyplot as plt
def a(n):
    return (1 + 1/n)**n

plt.plot(a(1),a(2),a(3), a(4), a(5), a(6))
plt.show()
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$+\pi/2$', r'$+\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$+\pi/2$', r'$+\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$+\pi/2$', r'$+\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3*\pi/2', r'2*\pi'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3\pi/2', r'2\pi'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3 $\pi$/2', r'2 $\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, C, color="blue", linewidth=2.5, linestyle="-")
plt.plot(X, S, color="red", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-1, 0, +1])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = 2 * np.pi / 3
plt.plot([t, t], [0, np.cos(t)], color='blue', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.cos(t), ], 50, color='blue')
plt.annotate(r'$sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.sin(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.cos(t)], color='blue', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.cos(t), ], 50, color='blue')
plt.annotate(r'$sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.sin(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='blue', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.cos(t), ], 50, color='blue')
plt.annotate(r'$sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.sin(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.cos(t), ], 50, color='red')
plt.annotate(r'$sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.sin(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.sin(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$sin(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{2\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{\pi}{3})=\frac{\sqrt{3}}{2}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{\pi}{3})=\sqrt{3}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
plt.plot([t, t],[0, np.sin(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ],[np.sin(t), ], 50, color='red')
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [0, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{\pi}{3})=\sqrt{3}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [np.pi, np.tan(t)], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{\pi}{3})=\sqrt{3}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [np.pi, np.pi], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{\pi}{3})=\sqrt{3}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
%matplotlib inline
# это магия!
import numpy as np
import matplotlib.pyplot as plt
X = np.linspace(-np.pi, 2*np.pi, 256, endpoint=True)
C, S = np.cos(X), np.sin(X)
plt.figure(figsize=(10, 6), dpi=80)
plt.grid(True)
#Задаем цвет, стиль и толщину линий
plt.plot(X, S/C, color="blue", linewidth=2.5, linestyle="-")
#Устанавливаем границы по осям
plt.xlim(X.min() * 1.1, X.max() * 1.1)
plt.ylim(C.min() * 1.1, C.max() * 1.1)
#Устанавливаем подписи по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi])
plt.yticks([-10, 0, +10])
#Устанавливаем изображение подписей по осям
plt.xticks([-np.pi, -np.pi/2, 0, np.pi/2, np.pi, 3* np.pi/2, 2*np.pi],[r'$-\pi$', r'$-\pi/2$', r'$0$', r'$\pi/2$', r'$\pi$', r'3$\pi$/2', r'2$\pi$'])
plt.yticks([-1, 0, +1],[r'$-1$', r'$0$', r'$+1$'])
t = np.pi / 3
plt.plot([t, t], [np.tan(t), np.pi], color='red', linewidth=2.5, linestyle="--")
plt.scatter([t, ], [np.tan(t), ], 50, color='red')
plt.annotate(r'$tan(\frac{\pi}{3})=\sqrt{3}$',
xy=(t, np.tan(t)), xycoords='data',
xytext=(+10, +30), textcoords='offset points', fontsize=16,
arrowprops=dict(arrowstyle="->", connectionstyle="arc3,rad=.2"))
import numpy as np
import matplotlib.pyplot as plt

%history?
%history -f history.txt
